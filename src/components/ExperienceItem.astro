---
interface Props {
  title: string;
  company: string;
  description?: string;
  descriptionList?: Array<string>;
  link?: string;
  date: string;
}

const { title, company, description, descriptionList, link, date } =
  Astro.props;
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10"
>
  <span
    class="text-yellow-400 -left-[42px] -top-[10px] absolute rounded-full text-5xl"
    >&bull;</span
  >
  <div class="pb-12 md:col-span-2">
    <h3 class="text-xl font-bold text-yellow-400">{title}</h3>
    <h4 class="mt-2 mb-2 text-xl font-semibold text-white">{company}</h4>
    <time class="text-md">{date}</time>
  </div>
  <div class="relative flex flex-col gap-2 pb-4 text-gray-300 md:col-span-3">
    {description}
    {
      descriptionList && (
        <ul class="list-disc">
          {descriptionList.map((item) => (
            <li>{item}</li>
          ))}
        </ul>
      )
    }
    {
      link && (
        <a
          href={link}
          target="_blank"
          role="link"
          class="inline-flex items-center text-lg font-medium text-yellow-200 hover:text-yellow-400"
        >
          Ver proyecto
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="w-5 icon icon-tabler icon-tabler-chevron-right"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 6l6 6l-6 6" />
            </>
          </svg>
        </a>
      )
    }
  </div>
</div>
